spring.application.name=core
# 内置tomcat端口
server.port=30000
# 数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# Cookie
#server.:q.cookie.comment= # Comment for the session cookie.
server.servlet.session.persistent=false
# "HttpOnly" flag for the session cookie.
server.servlet.session.cookie.http-only=true
# Maximum age of the session cookie in seconds.
server.servlet.session.cookie.max-age=7D
# Session cookie name.
server.servlet.session.cookie.name=session_id
#server.session.cookie.path= # Path of the session cookie.
server.servlet.session.cookie.secure=false
server.servlet.session.tracking-modes=cookie
#设置session失效时间,单位秒,设置为一周
server.servlet.session.timeout=7D
# 连接池
# 初始化大小，最小，最大
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# Mybatis-Spring-Boot配置
#mybatis.config-location=classpath:mybatis-config.xml
# Mybatis配置（可以不使用mybatis-config.xml）
# 指定mapper.xml的位置
mybatis.mapper-locations=classpath:mapping/*.xml
mybatis.type-aliases-package=com.california.common.model
mybatis.configuration.mapUnderscoreToCamelCase=true
mybatis.configuration.useColumnLabel=true
# Mybatis配置（可以不使用mybatis-config.xml）

# 返回时间格式正确
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
spring.jackson.serialization.fail-on-empty-beans=false
# mvc
# Path pattern used for static resources.
spring.mvc.static-path-pattern=/static/**
# resource
# 是否开启默认的资源处理，默认为true
spring.resources.add-mappings=true

# 是否开启缓存，默认为: true
spring.resources.chain.cache=true
# 设定资源的缓存时效，以秒为单位.
spring.resources.cache.period=1D
# 是否开启内容版本策略，默认为false
spring.resources.chain.strategy.content.enabled=true
# 指定静态资源路径，默认为classpath:[/META-INF/resources/,/resources/, /static/, /public/]以及context:/
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/
# mail
#spring.mail.host=smtpdm.aliyun.com
#spring.mail.username=username
#spring.mail.port=465
#spring.mail.protocol=smtp
#spring.mail.password=password
#spring.mail.defaultEncoding=utf-8
#spring.mail.properties.mail.smtp.auth=true;
#spring.mail.properties.mail.smtp.ssl.enable=true;
#spring.mail.properties.mail.smtp.socketFactory.port=465
#spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
#spring.mail.properties.mail.smtp.socketFactory.fallback=false
# PageHelper
#pagehelper.helperDialect=mysql
#pagehelper.reasonable=true
#pagehelper.supportMethodsArguments=true
#pagehelper.params=count=countSql
#consul
#spring.cloud.consul.host=192.168.1.31
#spring.cloud.consul.port=8500
#spring.cloud.consul.discovery.enabled=true
#spring.cloud.consul.discovery.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
#spring.cloud.consul.discovery.service-name=ybd_admin
#spring.cloud.consul.discovery.hostname=192.168.1.31
#spring.cloud.consul.discovery.port=${server.port}
#spring.cloud.consul.discovery.health-check-url=http://192.168.1.31:20001/health
#spring.cloud.consul.discovery.health-check-interval=10s
#spring.cloud.consul.discovery.tags=develop
##发送失败情况重试次数
#spring.kafka.producer.retries=0
##发送前要批次的记录数
#spring.kafka.producer.batch-size=16384
##生产者可以用来缓冲等待发送到服务器的记录的总字节数
#spring.kafka.producer.buffer-memory=33554432
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.bootstrap-servers=192.168.199.248:9092,192.168.199.146:9092,192.168.199.170:9092
#
#
#spring.kafka.consumer.bootstrap-servers=192.168.199.248:9092,192.168.199.146:9092,192.168.199.170:9092
#spring.kafka.consumer.group-id=foo
##Kafka没有初始偏移量，或者当前的偏移量在服务器上不再存在时的策略
#spring.kafka.consumer.auto-offset-reset=earliest
##开启自动提交topic,每隔100ms消费者偏移量自动提交
#spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=100
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# 默认使用develop的配置
spring.profiles.active=local